import Foundation

/// Bungo.
public enum Bungie {

    /// Our application key generated by Bungie.
    /// - Warning: An exception is raised if a key is not set prior to making a request.
    public static var key: String?

    /// Our application id generated by Bungie.
    /// - Warning: An exception is raised if an id is not set prior to making a request.
    public static var appId: String?

    /// The current version of the RaidDad app target. Used to create the user agent string.
    /// - Warning: An exception is raised if a version is not set prior to making a request.
    public static var appVersion: String?

    enum API {
        case getClan(withId: String)
        case getFindClan(withQuery: String)
        case getMembers(withClanId: String)
        case getPlayer(withId: String, onPlatform: Platform)
        case getFindPlayer(withQuery: String, onPlatform: Platform)
        case getItem(withId: String)

        var request: URLRequest {
            guard let key = key else { fatalError("DadKit: A request was attempted before `Bungie.key` was set.") }
            guard let appId = appId else { fatalError("DadKit: A request was attempted before `Bungie.appId` was set.") }
            guard let appVersion = appVersion else { fatalError("DadKit: A request was attempted before `Bungie.appVersion` was set.") }

            var req = URLRequest(url: endpoint)
            req.addValue("Raid-Dad/\(appVersion) AppId/\(appId) (+www.raiddad.com;nathanhosselton@gmail.com)", forHTTPHeaderField: "User-Agent")
            req.addValue(key, forHTTPHeaderField: "X-API-Key")
            return req
        }

        private var endpoint: URL {
            var comps = URLComponents()
            comps.scheme = "https"
            comps.host = "www.bungie.net"

            let basePath = "/Platform"

            switch self {
            case .getClan(let id):
                comps.path = basePath + "/GroupV2/" + id

            case .getFindClan(let query):
                comps.path = basePath + "/GroupV2/Name/\(query)/1/"

            case .getMembers(let clanId):
                comps.path = basePath + "/GroupV2/\(clanId)/Members/"

            case .getPlayer(let player, let platform):
                comps.path = basePath + "/Destiny2/\(platform)/Profile/\(player)"
                comps.queryItems = [URLQueryItem(name: "components", value: Player.Components.forRaidDad.asQueryString)]

            case .getFindPlayer(let query, let platform):
                comps.path = basePath + "/Destiny2/SearchDestinyPlayer/\(platform)/\(query)/"

            case .getItem(let id):
                comps.path = basePath + "/Destiny2/Manifest/DestinyInventoryItemDefinition/" + id
            }

            guard let url = comps.url else { fatalError("DadKit: What did I typo " + #file + #function) }

            return url
        }
    }

    /// A type representing the available platforms for Destiny 2.
    public enum Platform: Int {
        case none, xbox, psn, blizzard = 4

        /// Internal use
        /// - Warning: Only valid for search queries.
        case all = -1

        public typealias RawValue = Int

        public init(rawValue: Int?) {
            guard let raw = rawValue else { self = .none; return }
            self = Platform(rawValue: raw) ?? .none
        }
    }
}


private extension Player {
    enum Components: String {
        case none = "0"
        case profiles = "100"
        case vendorReceipts = "101"
        case profileInventories = "102"
        case profileCurrencies = "103"
        case profileProgression = "104"
        case characters = "200"
        case characterInventories = "201"
        case characterProgressions = "202"
        case characterRenderData = "203"
        case characterActivities = "204"
        case characterEquipment = "205"
        case itemInstances = "300"
        case itemObjectives = "301"
        case itemPerks = "302"
        case itemRenderData = "303"
        case itemStats = "304"
        case itemSockets = "305"
        case itemTalentGrids = "306"
        case itemCommonData = "307"
        case itemPlugStates = "308"
        case vendors = "400"
        case vendorCategories = "401"
        case vendorSales = "402"
        case kiosks = "500"
        case currencyLookups = "600"
        case presentationNodes = "700"
        case collectibles = "800"
        case records = "900"

        static var forRaidDad: [Components] {
            return [.profiles, .characters, .characterEquipment, .itemInstances, .itemTalentGrids]
        }
    }
}

private extension Array where Element == Player.Components {
    var asQueryString: String {
        return map({ $0.rawValue }).joined(separator: ",")
    }
}
